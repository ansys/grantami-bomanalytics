name: "Check concurrent workflows"
on:
  workflow_call:
    outputs:
      active-runs:
        description: "Whether there are active runs ('true'|'false')"
        value: ${{ jobs.checkWorkflowRuns.outputs.result }}

jobs:
  checkWorkflowRuns:
    name: "Check current workflow runs"
    runs-on: [ ubuntu-latest ]
    outputs:
      result: ${{ steps.check-workflow-runs.outputs.result }}
    steps:
      - name: "Get runs"
        id: check-workflow-runs
        env:
          GH_TOKEN: ${{ github.token }}
        shell: pwsh
        run: |
          function Check-For-Ongoing-Runs {
            $currentRepository = "${{ github.repository }}"
            $currentWorkflow = "${{ github.workflow }}"
            $currentRunNumber = "${{ github.run_number }}"
          
            $workflows = 
            @{Repository='ansys/grantami-recordlists'; Name='CI'}, 
            @{Repository='ansys/grantami-bomanalytics'; Name='Pre-merge checks'}
          
            foreach ($workflow in $workflows) {
                if (($workflow.Repository -eq $currentRepository) -and ($workflow.Name -eq $currentWorkflow)) {
                  $query = '[.[] | select(.status | test("(in_progress)|(queued)|(requested)|(waiting)|(pending)")) | select(.number != ' + $currentRunNumber + ')] | length'
                } else {
                  $query = '[.[] | select(.status | test("(in_progress)|(queued)|(requested)|(waiting)|(pending)"))] | length'
                }
                $count = gh run list -R $workflow.Repository -w $workflow.Name --json number,status -q $query
                Write-Host $workflow.Repository $workflow.Nam: $count runs in progress
                if ($count -gt 0){
                    return $true
                }
            }
            return $false
          }
          
          $result = Check-For-Ongoing-Runs
          echo "result=$result" >> GITHUB_OUTPUT
