name: Pre-merge checks

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

jobs:
  style:
    name: Style check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Create local deps folder
        run: mkdir -p deps

      - name: Copy client common wheel
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: ci_cd.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-common-wheel
          path: deps
          repo: pyansys/openapi-common
          check_artifacts: false
          search_artifacts: false

      - name: Copy client library
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: build_and_test_library.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-bomanalytics-openapi-wheel
          path: deps
          repo: pyansys/grantami-bomanalytics-openapi
          check_artifacts: false
          search_artifacts: false

      - name: Install style requirements
        run: pip install tox --disable-pip-version-check

      - name: Spell, Lint and Type Check
        run: tox -e style

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2

      - name: Install kerberos headers
        run: sudo apt install libkrb5-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create local deps folder
        run: |
          mkdir -p deps

      - name: Copy client common wheel
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: ci_cd.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-common-wheel
          path: deps
          repo: pyansys/openapi-common
          check_artifacts: false
          search_artifacts: false

      - name: Copy client library
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: build_and_test_library.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-bomanalytics-openapi-wheel
          path: deps
          repo: pyansys/grantami-bomanalytics-openapi
          check_artifacts: false
          search_artifacts: false

      - name: Install dependencies
        run: pip install tox tox-gh-actions==2.9.1 --disable-pip-version-check

      - name: Test with tox (no integration tests)
        run: tox -- -m "not integration"

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  integration_tests:
    name: Integration tests
    runs-on: ${{ matrix.os }}
    needs: [style, unit_tests]
    if: ${{ !contains( github.event.pull_request.labels.*.name, 'dependencies') }}

    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install kerberos headers (ubuntu only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install libkrb5-dev

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Create local deps folder
        run: mkdir -p deps

      - name: Copy client common wheel
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: ci_cd.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-common-wheel
          path: deps
          repo: pyansys/openapi-common
          check_artifacts: false
          search_artifacts: false

      - name: Copy client library
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: build_and_test_library.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-bomanalytics-openapi-wheel
          path: deps
          repo: pyansys/grantami-bomanalytics-openapi
          check_artifacts: false
          search_artifacts: false

      - name: Install dependencies
        run: pip install tox tox-gh-actions==2.9.1 --disable-pip-version-check

      - name: Test with tox (integration tests only)
        run: tox -- -m "integration"
        env:
          TEST_SL_URL: ${{secrets.TEST_SERVER_URL}}
          TEST_USER: ${{secrets.TEST_SERVER_READ_USER}}
          TEST_PASS: ${{secrets.TEST_SERVER_READ_PASS}}

  package:
    name: Build package
    runs-on: ubuntu-latest
    needs: integration_tests

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Create wheel
        run: |
          pip install poetry --disable-pip-version-check
          poetry build

      - name: Validate wheel
        run: |
          pip install twine --disable-pip-version-check
          twine check dist/*

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ansys-grantami-bomanalytics-wheel
          path: dist/
          retention-days: 7

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    if: >
      always() &&
      (
        (
          contains(github.event.pull_request.labels.*.name, 'dependencies')
          && needs.style.result == 'success'
          && needs.unit_tests.result == 'success'
        )
        || needs.integration_tests.result == 'success'
      )
    needs: [style, unit_tests, integration_tests]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install kerberos headers
        run: sudo apt install libkrb5-dev

      - name: Install pandoc
        run: sudo apt install pandoc

      - name: Create local deps folder
        run: mkdir -p deps

      - name: Copy client common wheel
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: ci_cd.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-common-wheel
          path: deps
          repo: pyansys/openapi-common
          check_artifacts: false
          search_artifacts: false

      - name: Copy client library
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.CLIENT_COMMON_REPO_TOKEN}}
          workflow: build_and_test_library.yml
          workflow_conclusion: success
          branch: main
          name: ansys-grantami-bomanalytics-openapi-wheel
          path: deps
          repo: pyansys/grantami-bomanalytics-openapi
          check_artifacts: false
          search_artifacts: false

      - name: Install library
        run: pip install .[doc] --find-links ./deps --disable-pip-version-check --pre

      - name: Set BUILD_EXAMPLES environment variable
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'dependencies') }}
        run: echo "BUILD_EXAMPLES=1" >> $GITHUB_ENV

      - name: Build HTML Documentation
        run:
          make -C doc html SPHINXOPTS="-W"
        env:
          TEST_SL_URL: ${{secrets.TEST_SERVER_URL}}
          TEST_USER: ${{secrets.TEST_SERVER_READ_USER}}
          TEST_PASS: ${{secrets.TEST_SERVER_READ_PASS}}

      - name: Build PDF Documentation
        run: |
          sudo apt update
          sudo apt-get install -y texlive-latex-extra latexmk texlive-xetex fonts-freefont-otf xindy
          make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-pdf
          path: doc/build/latex/*.pdf
          retention-days: 7

  Release:
    if: contains(github.ref, 'refs/tags') && github.event_name == 'push'
    needs: [package, integration_tests, docs]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - uses: actions/checkout@v2
      
      # used for documentation deployment
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - uses: actions/download-artifact@v2
        with:
          name: ansys-grantami-bomanalytics-wheel

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html
          
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.2
        with:
          repository-name: pyansys/grantami-bomanalytics-docs
          token: ${{ steps.get_workflow_token.outputs.token }}
          BRANCH: gh-pages
          FOLDER: ~/html
          CLEAN: true

      # note how we use the PyPI tokens
      - name: Upload to Azure PyPi (disabled)
        run: |
          pip install twine
          # twine upload --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: __token__

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
