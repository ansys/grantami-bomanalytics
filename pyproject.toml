[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ansys-grantami-bomanalytics"
description = "Perform compliance and sustainability analysis on materials data stored in Granta MI."
version = "2.1.0dev0"
license = "MIT"
authors = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
maintainers = ["ANSYS, Inc. <pyansys.core@ansys.com>"]
repository = "https://github.com/pyansys/grantami-bomanalytics"
documentation = "https://bomanalytics.grantami.docs.pyansys.com"
readme = "README.rst"
keywords = [
  "Ansys",
  "Granta MI",
  "Bill of Materials",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
packages = [
  { include = "ansys", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9.0"

# Packages for core library
ansys-openapi-common = "^2.0.0"
ansys-grantami-bomanalytics-openapi = "3.0.0a1"
xmlschema = ">=2.4,<4.0"

# Packages for the examples extra
jupyterlab = { version = ">=3,<5", optional = true }
lxml = { version = ">=4,<6", optional = true }
pandas = { version = "^2.0", optional = true }
tabulate = { version = "^0.9", optional = true }
plotly = { version = "^5.17.0", optional = true }
ipywidgets = { version = "^8.1.1", optional = true }


[tool.poetry.group.dev.dependencies]
# Common packages for test and examples
jupyterlab = ">=3,<5"
lxml = ">=4,<6"
pandas = "^2.0"
tabulate = "^0.9"
pytest = ">=7,<9"
pytest-cov = ">=4,<6"
requests-mock = "^1"
ipython = "^8"
plotly = "^5.17.0"
ipywidgets = "^8.1.1"
mypy = "^1.9.0"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
# Doc packages
ansys-sphinx-theme = ">=0.12,<0.16"
numpydoc = "^1.6.0"
sphinx = "^7.1"
sphinx-notfound-page = "^1.0.0"
sphinx-copybutton = "^0.5.2"
enum_tools = ">=0.11,<0.13"
sphinx-toolbox = "^3.5.0"
jupytext =  "^1.15.2"
nbsphinx = "^0.9.3"

[tool.poetry.extras]

examples = [
  "lxml",
  "tabulate",
  "pandas",
  "jupyterlab",
  "plotly",
  "ipywidgets",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39,py310,py311,py312
isolated_build = True
requires =
  tox-gh-actions==2.9.1

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
whitelist_externals = poetry
commands_pre =
    poetry install --no-root
commands = poetry run pytest --cov=ansys.grantami.bomanalytics --cov-report=xml {posargs}
passenv =
    TEST_SL_URL
    TEST_USER
    TEST_PASS
    TEST_WRITE_USER
    TEST_WRITE_PASS
    HOME
"""

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
files = "src"
explicit_package_bases = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
namespace_packages = true

[tool.pytest.ini_options]
testpaths = "./tests"
markers = [
    """integration: test requires a real database (deselect with '-m \"not integration\"')"""
]

[tool.black]
line-length = 120

[tool.pydocstyle]
convention = "numpy"

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
skip_gitignore = true
skip = [".ipython", "cicd", "examples", "examples-dummy"]
src_paths = ["src", "tests"]
