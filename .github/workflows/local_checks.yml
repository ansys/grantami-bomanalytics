on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true
      BOM_OPENAPI_TOKEN:
        required: true

env:
  MAIN_PYTHON_VERSION: '3.9'

jobs:
  code-style:
    name: "Code Style Check"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          vale-version: "2.29.6"

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v4

      - name: Install kerberos headers
        run: sudo apt install libkrb5-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install poetry 'tox<4' --disable-pip-version-check

      - name: Configure git
        run: | 
          echo "https://${{ secrets.BOM_OPENAPI_TOKEN }}:@github.com" > $HOME/.git-credentials
          git config --global credential.helper store

      - name: Test with tox (no integration tests)
        run: tox -- -m "not integration"

      - name: Clean-up
        if: always()
        run: rm -f $HOME/.git-credentials

  package:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.MAIN_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create wheel
        run: |
          pip install poetry --disable-pip-version-check
          poetry build

      - name: Validate wheel
        run: |
          pip install twine --disable-pip-version-check
          twine check dist/*

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v3
        with:
          name: ansys-grantami-bomanalytics-wheel
          path: dist/
          retention-days: 7

  docs-no-examples:
    name: Build HTML documentation without examples
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.MAIN_PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install libkrb5-dev
          sudo apt install pandoc

      - name: Configure git
        run: | 
          echo "https://${{ secrets.BOM_OPENAPI_TOKEN }}:@github.com" > $HOME/.git-credentials
          git config --global credential.helper store

      - name: Install library
        run: |
          pip install poetry --disable-pip-version-check
          poetry install --with doc

      - name: Clean-up
        if: always()
        run: rm -f $HOME/.git-credentials

      - name: Build HTML Documentation
        run: make -C doc html SPHINXOPTS="-W"

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation-html-no-examples
          path: doc/build/html
          retention-days: 7
