name: Pre-merge checks

# Run only on main branch. This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - '*'
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: integration-server
  cancel-in-progress: false

jobs:
  start_vm:
    name: Start Azure VM
    runs-on: ubuntu-latest
    if: github.head_ref != 'dependabot/**'

    steps:
      - uses: actions/checkout@v2

      - name: Start VM with Azure CLI
        id: azure_cli
        uses: azure/CLI@v1
        with:
          azcliversion: 2.32.0
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
            az vm start -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_VM_NAME }}

      - name: Check server is ready
        run: |
          pip install requests --disable-pip-version-check
          python cicd/check_server.py
        env:
          TEST_SL_URL: ${{secrets.TEST_SERVER_URL}}
          TEST_USER: ${{secrets.TEST_SERVER_READ_USER}}
          TEST_PASS: ${{secrets.TEST_SERVER_READ_PASS}}

  style:
    name: Style check
    runs-on: ubuntu-latest
    if: github.head_ref != 'dependabot/**'

    steps:
      - uses: actions/checkout@v2

      - name: Install style requirements
        run: pip install tox --disable-pip-version-check

      - name: Spell, Lint and Type Check
        run: tox -e style

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    if: github.head_ref != 'dependabot/**'

    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2

      - name: Install kerberos headers
        run: sudo apt install libkrb5-dev

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install tox tox-gh-actions==2.9.1 --disable-pip-version-check

      - name: Test with tox (no integration tests)
        run: tox -- -m "not integration"

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  integration_tests:
    name: Integration tests
    runs-on: ${{ matrix.os }}
    needs: [style, unit_tests, start_vm]

    strategy:
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install kerberos headers (ubuntu only)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install libkrb5-dev

      - name: Install dependencies
        run: pip install tox tox-gh-actions==2.9.1 --disable-pip-version-check

      - name: Test with tox (integration tests only)
        run: tox -- -m "integration"
        env:
          TEST_SL_URL: ${{secrets.TEST_SERVER_URL}}
          TEST_USER: ${{secrets.TEST_SERVER_READ_USER}}
          TEST_PASS: ${{secrets.TEST_SERVER_READ_PASS}}

  package:
    name: Build package
    runs-on: ubuntu-latest
    needs: integration_tests

    steps:
      - uses: actions/checkout@v2

      - name: Create wheel
        run: |
          pip install poetry --disable-pip-version-check
          poetry build

      - name: Validate wheel
        run: |
          pip install twine --disable-pip-version-check
          twine check dist/*

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ansys-grantami-bomanalytics-wheel
          path: dist/
          retention-days: 7

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: [style, unit_tests, integration_tests]

    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install libkrb5-dev
          sudo apt install pandoc
          sudo apt install texlive-latex-extra latexmk texlive-xetex fonts-freefont-otf xindy

      - name: Build HTML Documentation
        run:  make -C doc html SPHINXOPTS="-W"
        env:
          TEST_SL_URL: ${{secrets.TEST_SERVER_URL}}
          TEST_USER: ${{secrets.TEST_SERVER_READ_USER}}
          TEST_PASS: ${{secrets.TEST_SERVER_READ_PASS}}
          BUILD_EXAMPLES: 1

      - name: Build PDF Documentation
        run: make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-pdf
          path: doc/build/latex/*.pdf
          retention-days: 7

  stop_vm:
      name: Stop Azure VM
      runs-on: ubuntu-latest
      needs: [docs, start_vm]
      if: always() && needs.start_vm.result != 'skipped'

      steps:
        - name: Stop Azure VM
          uses: azure/CLI@v1
          with:
            azcliversion: 2.32.0
            inlineScript: |
              az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
              az vm deallocate -g ${{ secrets.AZURE_RESOURCE_GROUP }} -n ${{ secrets.AZURE_VM_NAME }} --no-wait

  Release:
    if: contains(github.ref, 'refs/tags') && github.event_name == 'push'
    needs: [package, docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # used for documentation deployment
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - uses: actions/download-artifact@v2
        with:
          name: ansys-grantami-bomanalytics-wheel
          path: ~/dist

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html

