[build-system]
requires = ["flit-core >= 3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ansys-grantami-bomanalytics"
authors = [
  {name = "ANSYS, Inc." }
]
maintainers = [
  {name = "PyAnsys Maintainers", email = "pyansys.maintainers@ansys.com"}
]
license = {file = "LICENSE"}
readme = {file = "README.rst", content-type="text/x-rst"}
keywords = ["Ansys", "Granta MI", "Bill of Materials"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Private :: Do Not Upload"
]
requires-python = ">=3.7"

dynamic = ["version", "description"]

dependencies = [
  "ansys_openapi-common==0.1.0.dev0",
  "ansys-grantami-bomanalytics-openapi==0.1.0.dev12",
]

[project.urls]
Source = "https://github.com/pyansys/ansys-grantami-bomanalytics"

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "requests-mock",
  "dataclasses; python_version < '3.7'",
  "lxml",
  "tabulate",
  "pandas",
  "ipython",
]
doc = [
  "pyansys-sphinx-theme==0.2.0",
  "numpydoc==1.1.0",
  "sphinx==4.2.0",  # sphinx>4.2.0 not supported by enum_tools==0.6.5
  "sphinx_autodoc_typehints==1.15.1",
  "sphinx-notfound-page==0.8",
  "sphinx-copybutton==0.4.0",
  "enum_tools==0.6.5",
  "sphinx-toolbox==2.15.3",  # Required by enum_tools
  "jupyterlab==3.2.4",
  "jupytext==1.13.3",
  "lxml==4.6.4",
  "tabulate==0.8.9",
  "pandas==1.3.4",
  "nbsphinx==0.8.7",
]
examples = [
  "lxml",
  "tabulate",
  "pandas",
  "jupyterlab",
]

[tool.flit.module]
name = "ansys.grantami.bomanalytics"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37,py38,py39,coverage
isolated_build = True

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: coverage

[testenv]
deps =
  .[test]
install_command = pip install --pre --find-links ./deps {opts} {packages}
commands = pytest {posargs}
passenv =
    TEST_SL_URL
    TEST_USER
    TEST_PASS

[testenv:coverage]
deps = {[testenv]deps}
commands = pytest --cov=ansys.grantami.bomanalytics --cov-report=xml ./tests {posargs}

[testenv:lint]
deps =
    codespell==2.1.0
    flake8==3.9.2
    black
    mypy==0.910

commands =
    codespell ./src ./tests ./examples ./doc/source
    flake8 ./src ./tests ./examples
    black ./src ./tests --check
    mypy ./src
"""

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = "./tests"
markers = [
    """integration: test requires a real database (deselect with '-m \"not integration\"')"""
]

[tool.black]
line-length = 120
